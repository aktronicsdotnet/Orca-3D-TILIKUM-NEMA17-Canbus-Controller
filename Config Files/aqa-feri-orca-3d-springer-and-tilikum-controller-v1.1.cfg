# This file contains common pin mappings for ORCA 3D Springer controller
# V1.0 .To use this config, the firmware should be compiled for the
# STM32F103 with a "32KiB bootloader" and USB communication on PA11/PA12.

# The "make flash" command does not work on this board. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the Kedi
# controller with that SD card.

# See docs/Config_Reference.md for a description of parameters.

[include mainsail.cfg]

# Stealthburner LED
[include stealthburner_leds.cfg]

#########################
#			MCU			#
#########################

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f103xe_280018000E0000304E46514E-if00
# Change "usb-Klipper_stm32f103xe_280018000E0000304E46514E-if00" with your own board address
#restart_method: command

[mcu Tilikum]
serial: /dev/serial/by-id/usb-Klipper_stm32f103xe_39FFD70531304D3819621743-if00
# Change "usb-Klipper_stm32f103xe_280018000E0000304E46514E-if00" with your own board address
#restart_method: command

#########################
#		MOVEMENT		#
#########################

#--------B MOTOR--------#
[stepper_x]
step_pin: PE5
dir_pin: PE6
enable_pin: !PC15
microsteps: 16
rotation_distance: 40
endstop_pin: Tilikum:PC15
position_endstop: 332.5
position_max: 332.5
homing_speed: 100
homing_retract_dist: 5     # Setback distance after the first trigger of the reset switch
homing_positive_dir: true

[tmc2208 stepper_x]
uart_pin: PE3
run_current: 0.700
stealthchop_threshold: 999999

#--------A MOTOR--------#
[stepper_y]
step_pin: PC14
dir_pin: PC13
enable_pin: !PC15
microsteps: 16
rotation_distance: 40
endstop_pin: PA14
position_endstop: 305
position_max: 305
homing_speed: 100
homing_retract_dist: 5     # Setback distance after the first trigger of the reset switch
homing_positive_Dir: true

[tmc2208 stepper_y]
uart_pin: PE4
run_current: 0.700
stealthchop_threshold: 999999

#-Z0 MOTOR (LEFT FRONT)-#
[stepper_z]
step_pin: PC7
dir_pin: PC6
enable_pin: !PB11
microsteps: 32
rotation_distance: 40
gear_ratio: 60:16
endstop_pin: probe:z_virtual_endstop
position_max: 230
position_min: -5

[tmc2208 stepper_z]
uart_pin: PD15
run_current: 0.350
stealthchop_threshold: 999999

#-Z1 MOTOR (LEFT REAR)-#
[stepper_z1]
step_pin: PD6
dir_pin: PD5
enable_pin: !PD7
microsteps: 32
rotation_distance: 40
gear_ratio: 60:16

[tmc2208 stepper_z1]
uart_pin: PD4
run_current: 0.350
stealthchop_threshold: 999999

#-Z2 MOTOR (RIGHT REAR)-#
[stepper_z2]
step_pin: PB5
dir_pin: !PB6
enable_pin: !PB4
microsteps: 32
rotation_distance: 40
gear_ratio: 60:16

[tmc2208 stepper_z2]
uart_pin: PB3
run_current: 0.350
stealthchop_threshold: 999999

#-Z3 MOTOR (RIGHT FRONT)-#
[stepper_z3]
step_pin: PE14
dir_pin: !PD9
enable_pin: !PD3
microsteps: 32
rotation_distance: 40
gear_ratio: 60:16

[tmc2208 stepper_z3]
uart_pin: PD8
run_current: 0.350
stealthchop_threshold: 999999


#########################
#		EXTRUDER		#
#########################

[extruder]
step_pin: Tilikum:PA5
dir_pin: Tilikum:PA3
enable_pin: !Tilikum:PC4
microsteps: 8
rotation_distance: 3.8
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: Tilikum:PA2
sensor_type: Generic 3950 #EPCOS 100K B57560G104F
sensor_pin: Tilikum:PC3
#control: pid
#pid_Kp=16.929
#pid_Ki=1.017
#pid_Kd=70.466
min_temp: 0
max_temp: 300
min_extrude_temp: 140

[tmc2208 extruder]
uart_pin: Tilikum:PA6
#diag_pin: Tilikum:PA7
run_current: 0.400
stealthchop_threshold: 999999


#########################
#		HEATED BED		#
#########################

[heater_bed]
heater_pin: PB0
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC0
#control: pid
#pid_Kp=55.031
#pid_Ki=1.891
#pid_Kd=400.352
min_temp: 0
max_temp: 110


#########################
#          FANS         #
#########################

#----EXTRUDER BLOWER----#
[fan]
pin: Tilikum:PA0
kick_start_time: 0.5
off_below: 0.10

#-----EXTRUDER FAN------#
[heater_fan hotend_fan]
pin: Tilikum:PA1
heater: extruder
heater_temp: 50.0

#-----EXHAUST FAN------#
[heater_fan exhaust_fan]
pin: PA2
max_power: 0.5
shutdown_speed: 0.0
kick_start_time: 5.0
heater: extruder
heater_temp: 200
fan_speed: 0.5

#-----SPIRINGER FAN----#
[temperature_fan springer]
pin: PA0
sensor_type: temperature_mcu
kick_start_time: 0.5
off_below: 0.1
max_power: 1.0
min_speed: 0
shutdown_speed: 0
min_temp: 0
max_temp: 85
target_temp: 65
control: pid
pid_kp: 1.0
pid_ki: 0.5
pid_kd: 2.0


#-----DRIVER FAN----#
[temperature_fan drivers]
pin: PA1
sensor_type: Generic 3950
sensor_pin: PC2
kick_start_time: 0.5
off_below: 0.1
max_power: 1.0
min_speed: 0
shutdown_speed: 0
min_temp: 0
max_temp: 85
target_temp: 45
control: pid
pid_kp: 1.0
pid_ki: 0.5
pid_kd: 2.0


#########################
#      TEMPERATURE	   #
#########################

#----TILIKUM TEMP----#
[temperature_sensor tilikum]        
sensor_type: temperature_mcu
sensor_mcu: Tilikum

#----CHAMBER TEMP----#
[temperature_sensor chamber]
sensor_type: Generic 3950
sensor_pin: PC1

#----RASBERRY PI-----#
[temperature_sensor rasberry_pi]
sensor_type: temperature_host


#########################
#     ACCELEROMETER		#
#########################

[adxl345]
cs_pin: Tilikum:PB7
spi_software_sclk_pin: Tilikum:PB3
spi_software_mosi_pin: Tilikum:PB5
spi_software_miso_pin: Tilikum:PB4
axes_map: z,-y,x

[resonance_tester]
probe_points: 100, 100, 20
accel_chip: adxl345


#########################
#     CHAMBER LIGHT		#
#########################

[output_pin light]
pin: PB1
pwm:true
shutdown_value: 0
value:0.25
cycle_time: 0.01


#########################
#      RGB LIGHT		#
#########################

#[neopixel hotend_rgb]
#pin: Tilikum:PA15


############################################# 

#########################
#		HOMING Z		#
#########################

#------SAFE HOMING------#
[homing_override]
axes: z
set_position_z: 0
gcode:
   G90
   G0 Z5 F1800
   G28 X Y
#  G0 X125 Y125 F7200    #250mm   
#  G0 X150 Y150 F7200    #300mm   
#  G0 X175 Y175 F1800    #350mm   
   G0 X150 Y150 F4500    #350mm   
   G28 Z
   G0 Z10  F1800
#  G0 X125 Y125 Z30 F1800	#250mm
#  G0 X150 Y150 Z30 F1800	#300mm
#  G0 X175 Y175 Z30 F1800   #350mm  
   G0 X150 Y150 Z30 F1800   #350mm  

#--------BLTOUCH--------#
#[bltouch]
#sensor_pin: !PA13
#control_pin: PA8

#-------VORON TAP-------#
[probe]
pin: !Tilikum:PC13
x_offset: 0     			 # X-axis - sensor offset relative to the nozzle
y_offset: 25     			 # Y-axis - sensor offset relative to the nozzle
#z_offset: 0                  # Z-axis - sensor offset relative to the nozzle

#You'll need to manually calibrate the probe's Z offset by using "PROBE_CALIBRATE"
speed: 7.5                   # Levelling speed
samples: 3                   # sampling frequency
samples_result: median       # Value type (default median)
sample_retract_dist: 3.0     # Levelling retraction distance
samples_tolerance: 0.01      # Sampling tolerance (note that too small a value may result in increased sampling)
samples_tolerance_retries: 3 # Number of out-of-tolerance retries

#-------Reduce nozzle temperature for gantry levelling-------#
activate_gcode = 
	{% set PROBE_TEMP = 150 %}                     ## Setting the print head temperature 150
	{% set MAX_TEMP = PROBE_TEMP + 5 %}            ## Limit temperature +5 degrees
	{% set ACTUAL_TEMP = printer.extruder.temperature %}                   
	{% set TARGET_TEMP = printer.extruder.target %}                    
	                   
	{% if TARGET_TEMP > PROBE_TEMP %}              ## Checking the temperature
	{ action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
	M109 S{ PROBE_TEMP }
	{% else %}
	
	{% if ACTUAL_TEMP > MAX_TEMP %}                ## Judging the actual temperature
	{ action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
	TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
	{% endif %}
	{% endif %}


#########################
#		LEVELING		#
#########################
[quad_gantry_level]
gantry_corners:
	-60,-10		#Same for 250mm/300mm/350mm
	360,370		#310,320 for 250mm, 360,370 for 300mm, 410,420 for 350mm
points:
	45,45		#Same for 250mm/300mm/350mm
	45,255		#50,175 for 250mm, 50,225 for 300mm, 50,275 for 350mm
	225,255		#200,175 for 250mm, 250,225 for 300mm, 300,275 for 350mm
	255,45		#200,25 for 250mm, 250,25 for 300mm, 300,25 for 350mm


speed: 75                           # Levelling speed
horizontal_move_z: 10               # Z-axis starting height
retries: 5                          # Number of out-of-tolerance retries
retry_tolerance: 0.05               # Sampling tolerance
max_adjust: 10                      # Maximum adjustment stroke for levelling


#########################
#   MESH CALIBRATION	#
#########################
[bed_mesh]
speed: 75                    # Calibration speed
horizontal_move_z: 7.5       # Z-axis movement speed
mesh_min: 25,25              # Minimum calibration point coordinates x, y. Fixed for all models
mesh_max: 275, 275           # Maximum calibration point coordinates x, y. 220, 220 for 250mm, 270, 270 for 300mm, 320, 320 for 350mm model.
probe_count: 5,5             # Number of sampling points (5X5 is 25 points)
mesh_pps: 2,2                # Number of supplementary sampling points
algorithm: bicubic           # algorithmic model
bicubic_tension: 0.2         # Algorithmic interpolation don't move


#########################
#      IDLE TIMEOUT		#
#########################

[idle_timeout]
timeout: 1800                # The hot bed is switched off if the idle time exceeds 30 minutes


#########################
#		 PRINTER		#
#########################

[printer]
kinematics: corexy           # Printer type：corexy
max_velocity: 300            # Maximum speed (max. 300)
max_accel: 4000              # Maximum acceleration (max. 4000)
max_accel_to_decel: 4000     # Maximum acceleration to deceleration (max. 4000)
max_z_velocity: 10          # Z-axis maximum speed
max_z_accel: 350             # Z-axis maximum acceleration
square_corner_velocity: 5.0  # Square corner speed


#########################
#     BOARD PINOUT		#
#########################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PC10, EXP1_3=PB6,  EXP1_5=PC13, EXP1_7=PC15, EXP1_9=<GND>,
    EXP1_2=PC11, EXP1_4=PC12, EXP1_6=PB7,  EXP1_8=PC14, EXP1_10=<5V>,
    # EXP2 header
    EXP2_1=PB4, EXP2_3=PD2,  EXP2_5=PB8, EXP2_7=PB9,   EXP2_9=<GND>,
    EXP2_2=PB3, EXP2_4=PA15, EXP2_6=PB5, EXP2_8=<RST>, EXP2_10=<NC>


#########################
#     CUSTOM MACROS		#
#########################

#--------------------------------------------------------------------
[gcode_macro PROBECALIBRATE]
gcode:
    G28
    G0 X150 Y150 Z1 F1800
#    G0 X175 Y175 Z1 F3600  ##350mm
    PROBE_CALIBRATE

[gcode_macro G32]
gcode:
    BED_MESH_CLEAR               # Unloading net beds
    G28                            # Homing all axes
    QUAD_GANTRY_LEVEL            # Gantry levelling
    G28                            # Homing all axes
    G0 X150 Y150 Z30 F1800         # 300mm
#   G0 X175 Y175 Z30 F3600         # 350mm

#--------------------------------------------------------------------
[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F4800
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F600
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

#--------------------------------------------------------------------
[gcode_macro PRINT_START]
#   A better print_start macro for v2/trident
gcode:
  # This part fetches data from your slicer. Such as bed, extruder, and chamber temps and size of your printer.
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set target_chamber = params.CHAMBER|default("45")|int %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

  ##  Uncomment for Beacon Contact (1 of 4 for beacon contact)
  #SET_GCODE_OFFSET Z=0                                 # Set offset to 0

  # Home the printer, set absolute positioning and update the Stealthburner LEDs.
  STATUS_HOMING                                         # Set LEDs to homing-mode
  G28                                                   # Full home (XYZ)
  G90                                                   # Absolute position

  ##  Uncomment for bed mesh (1 of 2 for bed mesh)
  BED_MESH_CLEAR                                       # Clear old saved bed mesh (if any)

  # Check if the bed temp is higher than 90c - if so then trigger a heatsoak.
  {% if params.BED|int > 90 %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Display info on display
    STATUS_HEATING                                      # Set LEDs to heating-mode
    M106 S255                                           # Turn on the PT-fan

    ##  Uncomment if you have a Nevermore.
    #SET_PIN PIN=nevermore VALUE=1                      # Turn on the nevermore

    G1 X{x_wait} Y{y_wait} Z15 F6000                    # Go to center of the bed
    M190 S{target_bed}                                  # Set the target temp for the bed
    SET_DISPLAY_TEXT MSG="Heatsoak: {target_chamber}c"  # Display info on display
    TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Waits for chamber temp

  # If the bed temp is not over 90c, then skip the heatsoak and just heat up to set temp with a 5 min soak
  {% else %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Display info on display
    STATUS_HEATING                                      # Set LEDs to heating-mode
    G1 Z15 F1800                                        # Lift Z 15mm up
    G1 X{x_wait} Y{y_wait} F6000                        # Go to center of the bed
    M190 S{target_bed}                                  # Set the target temp for the bed
    SET_DISPLAY_TEXT MSG="Soak for 5 min"               # Display info on display
    G4 P300000                                          # Wait 5 min for the bedtemp to stabilize
  {% endif %}

  # Heat hotend to 150c. This helps with getting a correct Z-home.
  SET_DISPLAY_TEXT MSG="Hotend: 150c"                   # Display info on display
  M109 S150                                             # Heat hotend to 150c

  ##  Uncomment for Beacon contact (2 of 4 for beacon contact)
  #G28 Z METHOD=CONTACT CALIBRATE=1                     # Calibrate z offset and beacon model

  ##  Uncomment for Trident (Z_TILT_ADJUST)
  #SET_DISPLAY_TEXT MSG="Leveling"                      # Display info on display
  #STATUS_LEVELING                                      # Set LEDs to leveling-mode
  #Z_TILT_ADJUST                                        # Level the printer via Z_TILT_ADJUST
  #G28 Z                                                # Home Z again after Z_TILT_ADJUST

  ##  Uncomment for V2.4 (Quad gantry level AKA QGL)
  SET_DISPLAY_TEXT MSG="Leveling"                      # Display info on display
  STATUS_LEVELING                                      # Set LEDs to leveling-mode
  QUAD_GANTRY_LEVEL                                    # Level the printer via QGL
  G28 Z                                                # Home Z again after QGL

  ##  Uncomment for bed mesh (2 of 2 for bed mesh)
  SET_DISPLAY_TEXT MSG="Bed mesh"                      # Display info on display
  STATUS_MESHING                                       # Set LEDs to bed mesh-mode
  BED_MESH_CALIBRATE                                   # Start the bed mesh (add ADAPTIVE=1) for adaptive bed mesh

  ## Uncomment for Beacon Contact (3 of 4 for beacon contact)
  #G28 Z METHOD=CONTACT CALIBRATE=0                     # Calibrate z offset only with hot nozzle

  # Heat up the hotend up to target via data from slicer
  SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"     # Display info on display
  STATUS_HEATING                                        # Set LEDs to heating-mode
  G1 Z15 F1800                                          # Lift Z 15mm up
  G1 X{x_wait} Y{y_wait} Z15 F6000                      # Go to center of the bed
  M107                                                  # Turn off partcooling fan
  M109 S{target_extruder}                               # Heat the hotend to set temp

  ##   Uncomment for Beacon Contact (4 of 4 for beacon contact)
  #SET_GCODE_OFFSET Z=0.06                              # Add a little offset for hotend thermal expansion

  # Get ready to print by doing a primeline and updating the LEDs
  SET_DISPLAY_TEXT MSG="Printer goes brr"               # Display info on display
  STATUS_PRINTING                                       # Set LEDs to printing-mode
  G0 X{x_wait - 50} Y4 F600                           # Go to starting point
  G0 Z0.4                                               # Raise Z to 0.4
  G91                                                   # Incremental positioning 
  G1 X100 E20 F1000                                     # Primeline
  G90                                                   # Absolute position


    
#--------------------------------------------------------------------
[gcode_macro PRINT_END]            # Set PRINT_END as the end-of-print macro to customise the after-print action.
gcode:
    M400                           
    G92 E0                         # Zeroing the extruder
    G1 E-10.0 F3600                # Retracting the filament
    G91                            # relative position
    G0 Z1.00 X20.0 Y20.0 F6000     # Remove nozzle
    TURN_OFF_HEATERS             # Close the hot end
    M107                           # Switch off the fan.
    G1 Z2 F1800                    # Move the nozzle up 2 mm
    G90                            # absolute positioning
    G0  X150 Y300 F3600            # Park the nozzle at the rear
    BED_MESH_CLEAR               # Unloading net beds

#--------------------------------------------------------------------
[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
  ## Move head and retract only if not already in the pause state and park set to true
  {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
    _TOOLHEAD_PARK_PAUSE_CANCEL
  {% endif %}
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 1.0
gcode:
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set z_park_delta = 2.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - z_park_delta) %}
    {% set z_safe = z_park_delta %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E-{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
    {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

# Don't know what it is...
[exclude_object]

[respond]
default_type: echo
default_prefix:

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 61.358
#*# pid_ki = 6.493
#*# pid_kd = 144.959
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 44.118
#*# pid_ki = 13.369
#*# pid_kd = 36.399
#*#
#*# [probe]
#*# z_offset = -1.075
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.096667, 0.085000, 0.073333, 0.095000, 0.143333
#*# 	0.061667, 0.030000, 0.020000, 0.053333, 0.083333
#*# 	0.023333, -0.010000, -0.015000, 0.048333, 0.066667
#*# 	0.048333, 0.010000, 0.003333, 0.013333, 0.123333
#*# 	0.070000, 0.066667, 0.070000, 0.076667, 0.165000
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 25.0
#*# max_x = 275.0
#*# min_y = 25.0
#*# max_y = 275.0
#*#
#*# [input_shaper]
#*# shaper_type_x = zv
#*# shaper_freq_x = 32.4
#*# shaper_type_y = zv
#*# shaper_freq_y = 32.4